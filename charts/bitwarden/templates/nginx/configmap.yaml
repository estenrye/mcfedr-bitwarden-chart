{{- if .Values.nginx.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "bitwarden.fullname" . }}-nginx
  labels:
    {{- include "bitwarden.labels" . | nindent 4 }}
    app.kubernetes.io/component: nginx
data:
  default.conf: |
    server_tokens off;
    proxy_redirect          off;
    proxy_set_header        Host              $host;
    proxy_set_header        X-Real-IP         $remote_addr;
    proxy_set_header        X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header        X-Url-Scheme      $scheme;
    proxy_set_header        X-Forwarded-Proto $scheme;
    client_max_body_size    105m;
    client_body_buffer_size 128k;
    proxy_connect_timeout   90;
    proxy_send_timeout      90;
    proxy_read_timeout      90;
    proxy_buffers           32 4k;

    gzip on;
    gzip_comp_level    5;
    gzip_min_length    256;
    gzip_proxied       any;
    gzip_vary          on;
    gzip_types
      application/atom+xml
      application/javascript
      application/json
      application/ld+json
      application/manifest+json
      application/rss+xml
      application/vnd.geo+json
      application/vnd.ms-fontobject
      application/x-font-ttf
      application/x-web-app-manifest+json
      application/xhtml+xml
      application/xml
      font/opentype
      image/bmp
      image/svg+xml
      image/x-icon
      text/cache-manifest
      text/css
      text/plain
      text/vcard
      text/vnd.rim.location.xloc
      text/vtt
      text/x-component
      text/x-cross-domain-policy;

    map $uri $fido_content_type {
      default "application/fido.trusted-apps+json";
    }

    server {
      listen 8080;
      server_name {{ .Values.global.host }};

      add_header Referrer-Policy same-origin;
      add_header X-Content-Type-Options nosniff;
      add_header X-XSS-Protection "1; mode=block";
      add_header Strict-Transport-Security max-age=15768000;

      {{- if .Values.web.enabled }}
      location / {
        if ($http_x_forwarded_proto = "http") {
            return 301 https://$host$request_uri;
        }
        proxy_pass http://{{ include "bitwarden.fullname" . }}-web:5000/;
        add_header Referrer-Policy same-origin;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security max-age=15768000;
        add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https://haveibeenpwned.com https://www.gravatar.com; child-src 'self' https://*.duosecurity.com; frame-src 'self' https://*.duosecurity.com; connect-src 'self' wss://bitwarden.ekreative.com https://haveibeenpwned.com https://api.pwnedpasswords.com;";
        add_header X-Frame-Options SAMEORIGIN;
      }

      location = /app-id.json {
        if ($http_x_forwarded_proto = "http") {
            return 301 https://$host$request_uri;
        }
        proxy_pass http://{{ include "bitwarden.fullname" . }}-web:5000/app-id.json;
        add_header Referrer-Policy same-origin;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security max-age=15768000;
        proxy_hide_header Content-Type;
        add_header Content-Type $fido_content_type;
      }

      location = /duo-connector.html {
        if ($http_x_forwarded_proto = "http") {
            return 301 https://$host$request_uri;
        }
        proxy_pass http://{{ include "bitwarden.fullname" . }}-web:5000/duo-connector.html;
      }

      location = /u2f-connector.html {
        if ($http_x_forwarded_proto = "http") {
            return 301 https://$host$request_uri;
        }
        proxy_pass http://{{ include "bitwarden.fullname" . }}-web:5000/u2f-connector.html;
      }
      {{- end }}

      {{- if .Values.api.enabled }}
      location /attachments/ {
        if ($http_x_forwarded_proto = "http") {
            return 301 https://$host$request_uri;
        }
        proxy_pass http://{{ include "bitwarden.fullname" . }}-attachments:5000/;
      }
      {{- end }}

      {{- if .Values.api.enabled }}
      location /api/ {
        if ($http_x_forwarded_proto = "http") {
            return 301 https://$host$request_uri;
        }
        proxy_pass http://{{ include "bitwarden.fullname" . }}-api:5000/;
      }
      {{- end }}

      {{- if .Values.identity.enabled }}
      location /identity/ {
        if ($http_x_forwarded_proto = "http") {
            return 301 https://$host$request_uri;
        }
        proxy_pass http://{{ include "bitwarden.fullname" . }}-identity:5000/;
      }
      {{- end }}

      {{- if .Values.icons.enabled }}
      location /icons/ {
        if ($http_x_forwarded_proto = "http") {
            return 301 https://$host$request_uri;
        }
        proxy_pass http://{{ include "bitwarden.fullname" . }}-icons:5000/;
      }
      {{- end }}

      {{- if .Values.notifications.enabled }}
      location /notifications/ {
        if ($http_x_forwarded_proto = "http") {
            return 301 https://$host$request_uri;
        }
        proxy_pass http://{{ include "bitwarden.fullname" . }}-notifications:5000/;
      }

      location /notifications/hub {
        if ($http_x_forwarded_proto = "http") {
            return 301 https://$host$request_uri;
        }
        proxy_pass http://{{ include "bitwarden.fullname" . }}-notifications:5000/hub;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $http_connection;
      }
      {{- end }}

      {{- if .Values.admin.enabled }}
      location /admin {
        if ($http_x_forwarded_proto = "http") {
            return 301 https://$host$request_uri;
        }
        proxy_pass http://{{ include "bitwarden.fullname" . }}-admin:5000;
        add_header Referrer-Policy same-origin;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security max-age=15768000;
        add_header X-Frame-Options SAMEORIGIN;
      }
      {{- end }}

      location /server_ping {
        access_log off;
        return 200 "pong\n";
      }
    }
{{- end }}
